"use strict";(self.webpackChunksikepuri_of_algorithm=self.webpackChunksikepuri_of_algorithm||[]).push([[9548],{89548:A=>{A.exports=JSON.parse('{"nbformat":4,"nbformat_minor":2,"metadata":{},"cells":[{"metadata":{},"source":["!pip install ita"],"cell_type":"code","outputs":[{"output_type":"stream","name":"stdout","text":["Defaulting to user installation because normal site-packages is not writeable\\n","Requirement already satisfied: ita in /home/w/.local/lib/python3.10/site-packages (0.2.12)\\n","Requirement already satisfied: numpy in /home/w/.local/lib/python3.10/site-packages (from ita) (1.23.3)\\n","Requirement already satisfied: matplotlib in /home/w/.local/lib/python3.10/site-packages (from ita) (3.6.0)\\n","Requirement already satisfied: fonttools>=4.22.0 in /home/w/.local/lib/python3.10/site-packages (from matplotlib->ita) (4.37.4)\\n","Requirement already satisfied: pyparsing>=2.2.1 in /usr/lib/python3/dist-packages (from matplotlib->ita) (2.4.7)\\n","Requirement already satisfied: cycler>=0.10 in /home/w/.local/lib/python3.10/site-packages (from matplotlib->ita) (0.11.0)\\n","Requirement already satisfied: contourpy>=1.0.1 in /home/w/.local/lib/python3.10/site-packages (from matplotlib->ita) (1.0.5)\\n","Requirement already satisfied: kiwisolver>=1.0.1 in /home/w/.local/lib/python3.10/site-packages (from matplotlib->ita) (1.4.4)\\n","Requirement already satisfied: python-dateutil>=2.7 in /home/w/.local/lib/python3.10/site-packages (from matplotlib->ita) (2.8.2)\\n","Requirement already satisfied: pillow>=6.2.0 in /usr/lib/python3/dist-packages (from matplotlib->ita) (9.0.1)\\n","Requirement already satisfied: packaging>=20.0 in /home/w/.local/lib/python3.10/site-packages (from matplotlib->ita) (21.3)\\n","Requirement already satisfied: six>=1.5 in /usr/lib/python3/dist-packages (from python-dateutil>=2.7->matplotlib->ita) (1.16.0)\\n"]}],"execution_count":null},{"metadata":{},"source":["import ita\\n","\\n","%matplotlib inline"],"cell_type":"code","outputs":[],"execution_count":null},{"metadata":{},"source":["def draw_circle(x, y, r):\\n","    image = ita.array.make2d(100, 100)\\n","    y = len(image) - 1 - y\\n","    for i in range(y - r, y + r + 1):\\n","        for j in range(x - r, x + r + 1):\\n","            if (\\n","                0 <= i < len(image)\\n","                and 0 <= j < len(image[i])\\n","                and (x - j) ** 2 + (y - i) ** 2 < r**2\\n","            ):\\n","                image[i][j] = 1\\n","    return image\\n","\\n","\\n","image = draw_circle(10, 10, 10)\\n","ita.plot.image_show(image)"],"cell_type":"code","outputs":[{"output_type":"display_data","data":{"image/png":"","text/plain":["<Figure size 640x480 with 1 Axes>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<matplotlib.image.AxesImage at 0x7f7ca7608580>"]},"metadata":{},"execution_count":3}],"execution_count":null}]}')}}]);